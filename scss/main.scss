@import "./utils/variables";
@import "./utils/placeholders";
@import "./utils/mixins";
@import "./base/common";
@import "./base/reset";
@import "./components/header";
@import "./components/gallery";

.icon {
  width: 100px;
  height: 100px;
}

.icon-facebook {
  background-image: url('../images/facebook.svg');
}

.icon-github {
  background-image: url('../images/github.svg');
}

.icon-linkedin {
  background-image: url('../images/linkedin.svg');
}

.icon-twitter {
  background-image: url('../images/twitter.svg');
}

// @include generateIcons($socialIcons);

// @include generateIcons($techIcons);

// .responsive-container {
//     width: 936px;
//     margin: 0 auto;
//     padding: 0 15px;
//     outline: 2px dashed #f44336;

//     & ul {
//       display: flex;
//       gap: 30px;

//     }
//     & li {
//       width: 200px;
//       height: 200px;
//       background-color: aqua;
//       flex-shrink: 0;
//     }
// }

// .adaptive-container {
//   width: 296px;
//   margin: 0 auto;
//   padding: 0 15px;
//   outline: 2px dashed #f44336;

//   @media screen and (min-width: 768px) {
//       width: 736px;
//   }
//   @media screen and (min-width: 1200px) {
//       width: 936px;
//   }
//   & .adaptive-list {
    
//     @media screen and (min-width: 768px) {
//       display: flex;
//       gap: 30px;
//       flex-wrap: wrap;
//       justify-content: space-between;
//     }
//     @media screen and (min-width: 1200px) {
//       flex-wrap: nowrap;
//     }
//   }
//   & li {
//     margin-bottom: 30px;
//     width: 100%;
//     height: 200px;
//     background-color: aqua;
//     flex-shrink: 0;
//     @media screen and (min-width: 768px) {
//       width: 300px;
//     }
//     @media screen and (min-width: 1200px) {
//       width: 200px;
//     }
//   }
// }

// .responsive-container {
//   max-width: 1400px;
//   margin: 0 auto;
//   padding: 0 15px;
//   outline: 2px dashed #f44336;

//   & .responsive-list {
    
//     @media screen and (min-width: 768px) {
//       display: flex;
//       gap: 30px;
//       flex-wrap: wrap;
//     }
//     @media screen and (min-width: 1200px) {
//       flex-wrap: nowrap;
//     }
//   }
//   & li {
//     margin-bottom: 30px;
//     width: 100%;
//     height: 200px;
//     background-color: aqua;
//     flex-shrink: 0;
//     @media screen and (min-width: 768px) {
//       width: calc((100% - 30px) / 2);
//     }
//     @media screen and (min-width: 1200px) {
//       width: calc((100% - 90px) / 4);
//     }
//   }
// }

.grid-container {
 display: grid;
 grid-template-columns:  200px 200px 200px; //явна сітка
 grid-template-rows: 200px 152px;

 //ширина контейнера ділиться порівну на фракції
//  grid-template-columns: 1fr 1fr 1fr;

// можна комбінувати
// grid-template-columns: 532px 1fr 1fr;
// grid-template-columns: 532px 2fr 1fr;

// авто вирівнює колонку по контенту
// grid-template-columns: 532px auto 1fr;

// функція repeat(кількість, розмір)
// grid-template-columns: repeat(5, 100px);
// 5 разів повториться 100 та 200
// grid-template-columns: repeat(5, 100px 200px);
// grid-template-columns: repeat(4, 1fr);
// grid-template-columns: repeat(3, auto);

// комбінації
// grid-template-columns: 100px repeat(3, 1fr) 200px;

//autofill - розташує колонки по 150px
//Під час використання auto-fill створюється якомога більше стовпців (або рядків), які можуть вміститися в контейнер, навіть якщо ці стовпці пусті.
// З auto-fit, пусті стовпці (або рядки) будуть об'єднані, щоб елементи, які мають вміст, розтягувалися на ширину контейнера
// grid-template-columns: repeat(autofill, 150px);

 gap: 20px;
 column-gap: 18px;
 row-gap: 20px;
 gap: 20px 18px;

 grid-auto-rows: 100px; //задаємо висоту рядків для неявної сітки
 grid-auto-rows: 100px 50px;

 grid-auto-flow: row; //по замовчуванню наступні елементи ідуть в наступні рядки
 // наступні елементи ідуть в колонку
//  grid-auto-flow: column;
}

.grid-element {
  background-color: bisque;
}

//респонсивну розмітку в CSS Grid
.grid-cont {
  display: grid;
  gap: 20px;
  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
  //better to use autifit
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  background-color: aquamarine;
}
.grid-el {
  background-color: rgb(172, 127, 255);
}

.grid-element:first-child {
  // grid-column-start: 1;
  // grid-column-end: 2;
  grid-column: 1 / 2;
  // grid-row-start: 1;
  // grid-row-end: 3;
  grid-row: 1 / 3;
}
.grid-element:nth-child(2) {
//   grid-column-start: 2;
//  grid-column-end: 3;
grid-column: 2 / 3;
//  grid-row-start: 1;
//   grid-row-end: 2;
  grid-row: 1 / 2;
}
.grid-element:nth-child(3) {
  grid-column: 3 / 4;
  grid-row: 1 / 2;
}
.grid-element:nth-child(4) {
  grid-column: 2 / 4;
  grid-row: 2 / 3;
}

//header-footer

.grid-test {
 display: grid;
 grid-template-columns: repeat(4, 1fr);
 gap: 20px;
}
.grid-test > div{
  background-color: aqua;
}

.grid-Header {
//  grid-column-start: 1;
//  grid-column-end: 5;
grid-column: 1 / 5;
//  grid-row-start: 1;
//  grid-row-end: 2;
grid-row: 1 / 2;
}
.grid-Main {
//   grid-column-start: 1;
//   grid-column-end: 3;
//   grid-row-start: 2;
//  grid-row-end: 3;
 grid-column: 1 / 3;
  grid-row: 2 / 3;
}
.grid-Sidebar {
  grid-column: 4 / 5;
  grid-row: 2 / 3;
}
.grid-footer {
  grid-column: 1 / 5;
  grid-row: 3 / 4;
}

//header-footer !!!!grid-template-areas

.grid-test {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
  grid-template-areas: 
  "a a a a"
  "b b . c"
  "d d d d";
 }

 @media (max-width: 767px) {
  .grid-test {
    grid-template-areas: 
  "c a a a"
  "c b b b"
  "c d d d";
  }
 }
 .grid-test > div{
   background-color: aqua;
 }
 
 .grid-Header {
 grid-area: a;
 }
 .grid-Main {
  grid-area: b;
 }
 .grid-Sidebar {
  grid-area: c;
 }
 .grid-footer {
  grid-area: d;
 }